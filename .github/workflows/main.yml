
name: Release

on:
  push:
    branches:
      - "main"

jobs:
  # Windows:
  #   runs-on: windows-2022
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: create .env
  #       run: Copy-Item ".\.env_example" -Destination ".\.env"

  #     - uses: subosito/flutter-action@v2
  #       with:
  #         channel: 'beta'
  #         cache: true

  #     - name: Install project dependencies
  #       run: flutter pub get

  #     - name: Doctor
  #       run: flutter doctor

  #     - name: Binary
  #       run: flutter build windows

  #     - name: Archive build
  #       run: |
  #         Move-Item '.\build\windows\runner\Release' '.\light-wallet'
  #         Compress-Archive -Path '.\light-wallet' -DestinationPath '.\witnet-light-wallet-windows.zip' -Force

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: windows
  #         path: .\witnet-light-wallet-windows.zip

  # Linux:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: create .env
  #       run: cp ./.env_example ./.env

  #     - uses: subosito/flutter-action@v2
  #       with:
  #         architecture: x64
  #         channel: 'beta'
  #         cache: true

  #     - name: Install project dependencies
  #       run: flutter pub get

  #     - name: install needed dependencies
  #       run: sudo apt-get update -y && sudo apt-get install -y ninja-build libgtk-3-dev

  #     - name: Doctor
  #       run: flutter doctor

  #     - name: Binary
  #       run: flutter build linux --release

  #     - name: LDD
  #       run: ldd build/linux/x64/release/bundle/witnet_wallet

  #     - name: Archive Build
  #       run: |
  #         mv ./build/linux/x64/release/bundle ./light-wallet
  #         tar czvf witnet-light-wallet-linux.tar.gz ./light-wallet

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: linux
  #         path: ./witnet-light-wallet-linux.tar.gz

  MacOs:
    environment: main
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: create .env
        run: cp ./.env_example ./.env

      - uses: subosito/flutter-action@v2
        with:
          architecture: x64
          channel: 'stable'
          cache: true

      - name: Install project dependencies
        run: flutter pub get

      - name: Doctor
        run: flutter doctor

      - name: Binary
        run: flutter build macos --release

      - name: Prepare Signature/cert
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
          KEY_CHAIN_PWD: ${{ secrets.KEY_CHAIN_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          security create-keychain -p $KEY_CHAIN_PWD build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p $KEY_CHAIN_PWD build.keychain
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k $KEY_CHAIN_PWD build.keychain
          security find-identity

      - name: Sign
        env:
          IDENTITY_ID: ${{ secrets.IDENTITY_ID }}
        run: |
          codesign --force --deep -s $IDENTITY_ID ./build/macos/Build/Products/Release/myWitWallet.app -v

      - name: Verify Sign
        run: codesign --verify -vvvv ./build/macos/Build/Products/Release/myWitWallet.app

      - name: Create .dmg
        run: |
          brew install create-dmg
          create-dmg \
            --volname "myWitWallet" \
            --window-pos 200 120 \
            --window-size 800 529 \
            --icon-size 130 \
            --text-size 14 \
            --icon "myWitWallet.app" 260 250 \
            --hide-extension "myWitWallet.app" \
            --app-drop-link 540 250 \
            --hdiutil-verbose \
            "myWitWallet.dmg" \
            "./build/macos/Build/Products/Release/myWitWallet.app"

      - name: Notarize
        env:
          EM: ${{ secrets.APP_EMAIL }}
          PD: ${{ secrets.APP_PASSWORD }}
          TID: ${{ secrets.TEAM_ID }}
        run: |
          xcrun notarytool submit ./myWitWallet.dmg --apple-id "$EM" --password "$PD" --team-id "$TID"

      - name: Verify Notarization
        run: spctl -a -vvvv ./myWitWallet.dmg

      - uses: actions/upload-artifact@v3
        with:
          name: macos
          path: ./myWitWallet.dmg

  # Android:
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: create .env
  #       run: cp ./.env_example ./.env

  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: 'zulu'
  #         java-version: '11'
  #         cache: 'gradle'

  #     - uses: subosito/flutter-action@v2
  #       with:
  #         architecture: x64
  #         channel: 'beta'
  #         cache: true

  #     - name: Install project dependencies
  #       run: flutter pub get

  #     - name: Doctor
  #       run: flutter doctor

  #     - name: Binary
  #       run: flutter build apk

  #     - name: Prepare apk
  #       run: mv ./build/app/outputs/flutter-apk/app-release.apk ./witnet-light-wallet.apk

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: android
  #         path: ./witnet-light-wallet.apk

  # IOS:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: create .env
  #       run: cp ./.env_example ./.env

  #     - uses: subosito/flutter-action@v2
  #       with:
  #         architecture: x64
  #         channel: 'beta'
  #         cache: true

  #     - name: Install project dependencies
  #       run: flutter pub get

  #     - name: Doctor
  #       run: flutter doctor

  #     - name: Binary
  #       run: flutter build ios --release --no-codesign

  # Release:
  #   needs: [Windows, Linux, MacOs, Android]
  #   runs-on: ubuntu-latest
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v3

  #     # Download All Artifacts
  #     - uses: actions/download-artifact@v3
  #       with:
  #         path: release/

  #     - name: Insert Tag
  #       run: |
  #         TAG=${{github.ref_name}}
  #         sed -i "s/LATEST_VERSION/$TAG/g" RELEASE.md

  #     - name: Organize Releases
  #       run: |
  #         cd release
  #         mv android/* .
  #         mv linux/* .
  #         mv macos/* .
  #         mv windows/* .
  #         rm -rf android linux macos windows

  #     - name: Publish Github Release
  #       uses: ncipollo/release-action@v1
  #       with:
  #         name: "Light Wallet ${{github.ref_name}}"
  #         artifacts: "./release/*"
  #         bodyFile: "RELEASE.md"
  #         artifactErrorsFailBuild: true